import re
import time

Input = r"""\|...../.......-....\......./\........|............/..........\..............-....|-................../...-...
...................|../...../..............................|....................-....|..\.................../.
.......................\....--.........../..................|..............\........./..-...........|.........
-..........-......|...\.-..........................-......|......./|....\.-.........../-.................-../.
..................................................-./..........-.................................|.......|....
.\..-...-......\...................\..............|....\\...........|..........|...........|...../............
........-.....|............\......\/............./..-............................/.......|.-........-.........
\......\.......|.........||............/\....................-..\..-.....-.|/.............-......../.....-.\/.
.........\..|.............................../.|.........-.....................|................./.....\-./\...
.......................\............|./|....................--.\............................-........-\.../\..
...........|................/..............|..\.......|.......\................................-..\.......|-..
-..\.......-\....|................\........../................\.|.\.........\-.........-........\.........|...
\-.........-.............|--/....................\/..........\.../.....\............|..........|..............
..|.../........../................................................................................../.-.......
................-...|.............-.......................|................../.......\............|...|.\.....
.......\\....................../..../.............\.................................|......\........./........
.|...........-..|................/.............\........\.\.......-.......|..............................\....
....\.....-............/....../......|........|........-...........|..|.......\.....-.-.\.../.........../...\.
..........-........................|......-....................-................/............/..../...........
...............|.......|........-...../.....-..............-................................../.............-.
............\........-|......|.............././............/................................-..../.......\....
-.............\......................./|.........../....................\.\..........-....|...........-.....\.
.....\..............................|..\\.....|....|.....\/.........................|................/........
...........................\..|......................../...........-..../|\.\.............-.........\|.......-
......\/........-.\.....\............\..................../.....\....\....\...\..............|.....-..........
..|...-|.../.....-....|./......\../|................\................|...........................-.......-....
/.|............|...-..-.........................................-../|...-.|......................\............
/............../...../...--.........................../....................|..................-......./.......
.-..........-..-......../..\./..../......................|.......\....-............../-.......................
.....................\.........../............./...............................................|..............
.......................................\..-.............\..|....................\.....................\....-..
................./.........\.............................-......./.......\......................../...../.....
...-...........-..................||.........\.\........................................|........|-.....|.....
................\.....|...............................|..-..|../...........-.....-.......|....................
........|.......|.....\.|.../.................\.....././......-.-...\.......-....-.......|.........-..........
..\..-.....\...-.../...............\.|.\.......................................\..............|..........|.-..
...............\................|...............\.\........\..|...........................|..........|........
......................................|/.\................................./...............................//.
........./............-.............\....................-..............-......-..........\|............-.....
|....|.-/...............-..|..|/....|/..../........|.....-......../...................\..../......./..........
....|..........................|./....../.........|...................................\.............-.........
.........../.......................................\......\........./-.............../......../.-.........-...
......|..../........\...........|......-.......\...\......../............|............-.............|.........
..........|....|......\.......\../.../.....|...\/.........\...|.....\................./.|..-..............|...
.............|........................../........................./.......|......../.-.................\......
...-..../................|.......................-../...................\...//|........................|..\.|.
.....\..................\..|.........................|.\.........................|.../.....-.\................
......./.\.....-............-.-..............-.........................../|.................\.......\.........
....|........\........-...........-..../\......-.....\........-......................./...|...................
................\........../.....\.|.....-........|.....\..................................../.............|..
...................|..../...|........\............\........./....-............\.......|.......................
....|...............|.........|......|............-.........|..|../........-................-......\....\.....
.......-./..|..|...../|............|...-...........|....\...........-...........|.........|..-|..|\...........
...-............\.....-..........-................./.-.../..........\..\..|................................\..
./.|.........................-............|..........|.................\.........-.........................\..
............/.........\.............-..........-....|......../|.........../....\...............|..|...........
.-......\.......\................................./..-........-....................-....\...|...\.....|....|..
|./...........|.......-........../............\...................................|-.........\............\-..
............|.........-....-.....|.....|.................../|../.........\.............../.......-.../........
........./..................\...\.....................\..-....................................--..............
........................./....\./............./......-.../...................../......-......|...-..-/..\.....
....--..................../|....|.-................|.../....................-........././............-../.....
............|..........|......\..........\..................................../...............|..../......|...
.......-..........-.....\..........|......|............\./...................../.....-......../......../......
/..................|................||.-............/............|............................../\............
.....|................\-..............\.|......................\..................................|...........
...............|................/..................../............../.........\.............................|.
-......|....-...-....-.............|...............|....|\.....-..........-..........\........................
..............-./.............|.........-..\..-.....-...............-...-.....................................
.......................||.............-.........\................../.\....\.............................../...
..-./...-.........-...................|............................|........................................-.
.-..\...........\.............\.................|.\................../........-..............-................
........-.......//................................./..................../.......\..\..........................
............../..........|..................../..........|../.....................|......-........-...........
/........-...............................|.......-\..........-...-.../......\...|\...-..................\.....
...\\|...........||......................\..../.../......|..........|...............|....--....-..............
-./..................|............................\................|.-................\......-.-..............
....\.\.|.......|..................-....../.../........../.|....-......................./....\...........-.\..
/.......\.......\....../......../...............\...|....../..........\........../............./....../.......
/.\.................|..|..\.............../......./|...........\......-./\...........|.................\...|..
....../........|.....-....-........\......|-./...-..........................-..-.....\/.....................\.
................................/.....|....|.../..........................................|.........\.........
............./...........|......\......./../..-.............|....\........\.....|..-.......-..........-.....-.
.....|..-.........................|.|................../............\.........\.............../..-.......\....
....................|...../...................\........\...../|............/..................................
.....................................|\......./...|...../|............./....-..............\..................
|........\\.............../.|....-../../../..........-\.........-......\.........-............-...../\........
...\.../................-......................-...........-...-............................|./............/..
|........../\.|....\..\......................\...|........................./..-......................\........
............\.....\.....\............|..|.......................|/...........-...../....................-.....
..|..........|-......|........................-..............\..............\......|.....|-/.......-..........
.......................................-..................|........................................\........-.
..../..|....-.............................|......|\-.........../.......\.......\.\........................|\..
.......-...-..\......../.../...........-...................../.../.......................-..................-.
\............./.....-..\.....................|.............-....||.....................-........-.............
../........-............/.....|./.\/.../.................-...|/..................-.../..............\....-./..
..\.........................-................../....|.......................................................-.
.............................|......-../......|../............/\|./|..../../.......-.......-...\....|......./.
/.........-./.../..\|\|......|............./...|............/..../............../.........................-./.
.-...........|-....\/.\........../.....-.................--\...|.............../..|-.........../..............
......-.........|............./............/...........\..............-../................./\.....-..../......
.........-.................................../../|.|...........|.......-....................|....|............
.........../....../\.-...................................|..........|\.-......................................
/..../................................/.........-....\/.....///...|.......\.\....|.....\...|.-./.........-....
..............................\\........../.....-.....|.//.|............|............./....-........\.........
......|......-.........|....././|......-/.............-.................................../..|-............./.
........|....................../...|...|....\.....//...../.\............/.../................................/
.....................-...........-..\........|/.......\......\...\....-..-...........-|.....\..........\..-|..
./..|..................................................................-..-.-............../..................
......../........................\|.........../.../........\..............\.....-....\..../..\................""".split('\n')

""" Conditions : 
    .                                               // Nothing happens, stay in the same direction
    /
        Coming from left, going up
        Coming from right, going down
        Coming from bot, going right
        Coming from top, going left
    \   
        Coming from left, going down
        Coming from right, going up
        Coming from bot, going left
        Coming from top, going right
    |
        Coming from bot, going top
        Cominng from top, going bot
        Coming left or right, split into bot and top
"""
len_hor = len(Input[0])
len_ver = len(Input)

Mirror_Right = {'L':'B', 'R':'T', 'B':'L', 'T':'R'}                 # /
Mirror_Left = {'L':'T', 'R':'B', 'B':'R', 'T':'L'}                  # \
Advance = {'R':(0, 1), 'L':(0, -1), 'T':(-1, 0), 'B':(1, 0)}

Start_position = (0, 0)
Start_direction = 'R'
Energized_beam = dict()
Already_tested = dict()

def Get_Next_Pos_Dir(Current_position, direction):
    y = Current_position[0]
    x = Current_position[1]
    if (y < 0 or y >= len_ver or x < 0 or x >= len_hor):                    # Outside of valid indexing range
        return 'STOP', 'STOP'                                               # Goes outside of any of the condition 
    case = Input[y][x]
    if case == '.' : 
        new_direction = direction
        next_position = (Current_position[0] + Advance[new_direction][0], Current_position[1] + Advance[new_direction][1])
    if case == '\\' :
        new_direction = Mirror_Left[direction]
        next_position = (Current_position[0] + Advance[new_direction][0], Current_position[1] + Advance[new_direction][1])
    if case == '/' :
        new_direction = Mirror_Right[direction]
        next_position = (Current_position[0] + Advance[new_direction][0], Current_position[1] + Advance[new_direction][1])
    if case == '|' :
        if direction in ('T', 'B'):
            new_direction = direction
            next_position = (Current_position[0] + Advance[new_direction][0], Current_position[1] + Advance[new_direction][1])
        else:
            new_direction = ('T', 'B')
            next_position = ((Current_position[0] + Advance[new_direction[0]][0], Current_position[1] + Advance[new_direction[0]][1]),
            (Current_position[0] + Advance[new_direction[1]][0], Current_position[1] + Advance[new_direction[1]][1]), (888))
    if case == '-' :
        if direction in ('L', 'R'):
            new_direction = direction
            next_position = (Current_position[0] + Advance[new_direction][0], Current_position[1] + Advance[new_direction][1])
        else:
            new_direction = ('L', 'R')
            next_position = ((Current_position[0] + Advance[new_direction[0]][0], Current_position[1] + Advance[new_direction[0]][1]),
            (Current_position[0] + Advance[new_direction[1]][0], Current_position[1] + Advance[new_direction[1]][1]), (888))
    
    return next_position, new_direction

def Follow_beam(Current_position, direction):
    global Already_tested
    global Energized_beam
    Already_tested[(Current_position, direction)] = 'X'
    Energized_beam[Current_position] = 'X'

    while len(Current_position) != 3 and Current_position != 'STOP':
        # print(Current_position)
        Current_position, direction = Get_Next_Pos_Dir(Current_position, direction)

        if (Current_position != 'STOP') and (len(Current_position) != 3) and (0 <= Current_position[0] < len_ver) and (0 <= Current_position[1] < len_hor):
            Energized_beam[Current_position] = 'X'
            if (Current_position, direction) in Already_tested:
                # print(f"This has ALSO run with {Current_position} and {direction} ! ")
                return
            else:
                Already_tested[(Current_position, direction)] = 'X'

    if len(Current_position) == 3:                                  # Added (888) to dissociate case when beam is or isn't dispersed
        if (0 <= Current_position[0][0] < len_ver) and (0 <= Current_position[0][1] < len_hor):                                                  
            Follow_beam(Current_position[0], direction[0])
        if (0 <= Current_position[1][0] < len_ver) and (0 <= Current_position[1][1] < len_hor):
            Follow_beam(Current_position[1], direction[1])

# Start = time.time()
# Follow_beam(Start_position, Start_direction)
# End = time.time() - Start
# print(f'It tooks approximately : {End} s to run')
# print(Already_tested, '\n')
# print(f'This is supposedly the number of Already Tested : {len(Already_tested)} \n')

# print(Energized_beam, '\n')
#print(f'This is supposedly the number of energized cells : {len(Energized_beam)} \n')


## Part 2

Max_Energized_Beams = 0

for i in range(len_hor):
    Follow_beam((0, i), 'B')
    len_do_we_keep = len(Energized_beam)
    if len_do_we_keep > Max_Energized_Beams:
        Max_Energized_Beams = len_do_we_keep
    Energized_beam = dict()
    Already_tested = dict()

for i in range(len_hor):
    Follow_beam((len_ver-1, i), 'T')
    len_do_we_keep = len(Energized_beam)
    if len_do_we_keep > Max_Energized_Beams:
        Max_Energized_Beams = len_do_we_keep
    Energized_beam = dict()
    Already_tested = dict()

for i in range(len_ver):
    Follow_beam((i, 0), 'R')
    len_do_we_keep = len(Energized_beam)
    if len_do_we_keep > Max_Energized_Beams:
        Max_Energized_Beams = len_do_we_keep
    Energized_beam = dict()
    Already_tested = dict()

for i in range(len_ver):
    Follow_beam((i, len_hor-1), 'L')
    len_do_we_keep = len(Energized_beam)
    if len_do_we_keep > Max_Energized_Beams:
        Max_Energized_Beams = len_do_we_keep
    Energized_beam = dict()
    Already_tested = dict()

print(f'This is supposedly the answer for Part 2 : {Max_Energized_Beams} \n')